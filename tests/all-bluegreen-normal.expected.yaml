---
# Source: bluegreen/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: bluegreen-active
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  selector:
    app: bluegreen
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
# Source: bluegreen/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: bluegreen-preview
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  selector:
    app: bluegreen
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
# Source: bluegreen/templates/rollout.yaml
# This example demonstrates a Rollout using the blue-green update strategy, which contains a manual
# gate before promoting the new stack.
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: bluegreen
  namespace: bluegreen
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: bluegreen
  template:
    metadata:
      labels:
        app: bluegreen
    spec:
      containers:
      - name: bluegreen-demo
        image: argoproj/rollouts-demo:blue
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
  strategy:
    blueGreen: 
      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: bluegreen-active
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: bluegreen-preview
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
      autoPromotionEnabled: false
---
# Source: bluegreen/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: bluegreen-active
  name: bluegreen-active
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  port:
    targetPort: 8080
  to:
    kind: Service
    name:  bluegreen-active
    weight: 100
  wildcardPolicy: None
---
# Source: bluegreen/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: bluegreen-preview
  name: bluegreen-preview
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  port:
    targetPort: 8080
  to:
    kind: Service
    name:  bluegreen-preview
    weight: 100
  wildcardPolicy: None
---
# Source: bluegreen/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "all-bluegreen-test-connection"
  labels:
    helm.sh/chart: bluegreen-0.1.0
    app.kubernetes.io/name: bluegreen
    app.kubernetes.io/instance: all-bluegreen
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['all-bluegreen:80']
  restartPolicy: Never
